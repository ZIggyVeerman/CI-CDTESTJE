name: Java CI/CD with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Publish Test Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: build/reports/tests/test
      - name: Run tests
        run: ./gradlew test
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: compiled-app
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: compiled-app
          path: deployment

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add EC2 to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to EC2
        run: |
          rsync -avz --rsh "ssh -p 22 -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" deployment/ ubuntu@${{ secrets.REMOTE_HOST }}:/home/ubuntu/
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}

      - name: Stop Existing Java Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Kill the existing Java process gracefully
            pkill -f 'CI-CD-TESTJE-0.0.1-SNAPSHOT.jar'
            sleep 5  # Wait for the process to shut down
            
            # Check if process is still running and force kill if necessary
            if pgrep -f 'CI-CD-TESTJE-0.0.1-SNAPSHOT.jar'; then
              pkill -9 -f 'CI-CD-TESTJE-0.0.1-SNAPSHOT.jar'
            fi
            echo "Existing Java application process stopped."

      - name: Start Java Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Change to the directory where the JAR file is located
            cd /home/ubuntu/

            # Start the Java application
            nohup java -jar CI-CD-TESTJE-0.0.1-SNAPSHOT.jar > ~/app.log 2>&1 &

            # Optional: Wait a few seconds and check if the process is running
            sleep 10
            pgrep -f 'CI-CD-TESTJE-0.0.1-SNAPSHOT.jar' && echo "Java application is running." || echo "Failed to start Java application."